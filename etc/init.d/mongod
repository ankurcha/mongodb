#!/bin/sh

### BEGIN INIT INFO
# Provides:          mongod
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the MongoDB database server
# Description:       Starts the MongoDB database server
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# Full name of daemon
DAEMON=/usr/local/bin/mongod

# Daemon command line options
DAEMON_OPTS="-f /etc/mongodb/mongod.conf"

# Daemon name. Used also for pid file creation.
NAME="mongod"

# Daemon description
DESC="MongoDB database server"

# User account used to run mongod daemon
USER="mongodb"

# Replica set name (modify in case you would like to run mongod 
# configured as replica set node - see http://www.mongodb.org/display/DOCS/Replica+Sets)
RS_NAME=""

# In case mongod is configured as replica-set node, then RS_SEED_CMD
# can contain commandline for starting application/script returning
# seed nodes in format host1:port1,host2:port2,host3. (see Reg2Rep project
# at http://github.com/vanilladesk/reg2rep for example of using
# remote registry for keeping list of seed nodes in a dynamic environment)
RS_SEED_CMD=""

# In case mongod is configured as replica-set node, then RS_SEED
# can contain comma separated seed nodes e.g. RS_SEED="host1:port1,host2:port2,host3"
# If both RS_SEED_APP and RS_SEED are set, RS_SEED takes preference.
RS_SEED=""

# If RS_CONFIGURE_CMD is specified it should contain command line of a command/script
# used to initialize/configure replica set. Such script is provided in this
# package bin folder: mongodb-configure-rs.sh 
RS_CONFIGURE_CMD=""

# (optional) Application used to register node in central repository.
NODE_REGISTER_CMD=""

# (optional) Application used to unregister node from central repository.
NODE_UNREGISTER_CMD=""

#------------------------------------------------

[ -e $DAEMON ] || exit 0

set -e

. /lib/lsb/init-functions

function d_start {
  echo "Starting $DESC: "
  
  # if replica set name is defined
  if [ "$RS_NAME" ]; then
    echo "  - replica set name specified - starting as replica set node"
    if [ ! $RS_SEED ] && [ $RS_SEED_APP ]; then
	  RS_SEED="`RS_SEED_CMD`"
	fi
	
	# if RS_SEED is defined and RS_NAME too, then append RS_SEED to RS_NAME
    [ "$RS_SEED" ] && RS_NAME="$RS_NAME/$RS_SEED"

    # if RS_NAME is defined, then include it in daemon command line options
    DAEMON_OPTS="--replSet $RS_NAME $DAEMON_OPTS"
  fi 
  
  # if registration command is defined, then register
  if [ "$NODE_REGISTER_CMD" ]; then
    echo "  - registering - $NODE_REGISTER_CMD"
    $NODE_REGISTER_CMD
  fi
  
  start-stop-daemon --start --background --quiet \
    --make-pidfile --pidfile /var/run/$NAME.pid \
  	--chuid $USER \
  	--exec $DAEMON -- $DAEMON_OPTS || true
	
  if [ "$RS_NAME" ] && [ "$RS_CONFIGURE_CMD" ]; then
    # wait for database to start
    sleep 30 s 
	
	# run config
	$RS_CONFIGURE_CMD
  fi
	
  echo "  $NAME $DAEMON_OPTS"

}

function d_stop {
  echo "Stopping $DESC: "
  
  # if unregistration command is defined, then unregister
  if [ "$NODE_UNREGISTER_CMD" ]; then
    echo "  - unregistering - $NODE_UNREGISTER_CMD"
    $NODE_UNREGISTER_CMD
  fi

  start-stop-daemon --stop --quiet --pidfile /var/run/$NAME.pid \
  	--exec $DAEMON || true
  echo " $NAME has been stopped."

}

case "$1" in
  start)
    d_start
	;;
  stop)
    d_stop
	;;
  restart|force-reload)
	d_stop
	sleep 1
	d_start
	;;
  status)
	status_of_proc -p /var/run/$NAME.pid "$DAEMON" mongod && exit 0 || exit $?
	;;
  *)
	echo "Usage: $NAME {start|stop|restart|force-reload|status}" >&2
	exit 1
	;;
esac

exit 0
